import { useContext, useState } from "react";
import Head from "next/head";
import styles from "@/styles/Home.module.scss";
import SingleItem from "@/components/SingleItem";
import { globalContext } from "@/context/appContext";
import { BiSearchAlt } from "react-icons/bi";
import { useForm } from "react-hook-form";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { commerce } from "@/Data";
import axios from "axios";
import { CartType } from "@/context/globlaTypes";

type MyData = {
	id: number;
	title: string;
	price: number;
	description: string;
	image: string;
};

const Home = () => {
	type Inputs = {
		search: string;
	};

	const { products, addItemToCart, productCounts, setProducts } =
		useContext(globalContext);
	const { register, handleSubmit, watch } = useForm<Inputs>();
	const [searchResultsLoading, setsearchResultsLoading] = useState(false);
	const [searchResultsError, setsearchResultsError] = useState(false);
	const searchValue = watch("search");

	async function searchData(searchQuery: string) {
		try {
			setProducts([]);
			setsearchResultsError(false);
			setsearchResultsLoading(true);
			const response = axios.get(`/api/search?q=${searchQuery}`);
			const responseProducts = (await response).data as MyData[];
			console.log(responseProducts);
			if (!responseProducts) {
				setProducts(commerce);
				alert("Please your request was not found");
			} else {
				setProducts(responseProducts);
				console.log(responseProducts);
			}
		} catch (error: any) {
			console.log(error);
			setsearchResultsError(true);
			setsearchResultsLoading(false);
		} finally {
			setsearchResultsLoading(false);
		}
	}

	const customHandleSubmit = async (inputData: Inputs) => {
		if (inputData.search.length > 3) {
			const searchQuery = inputData.search.trim().toString();
			searchData(searchQuery);
		} else {
			setsearchResultsError(false);
			setsearchResultsLoading(false);
			setProducts(commerce);
		}
	};

	return (
		<>
			<Head>
				<title>{`Let's shop`}</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div>
				<Header title="Let's shop!" />
				<div className={styles.search}>
					<label htmlFor="search">Search Item</label>
					<form
						onSubmit={handleSubmit(customHandleSubmit)}
						className={styles.input}
					>
						<input
							{...register("search")}
							type="text"
							autoComplete="off"
							id="search"
							name="search"
							placeholder="men's clothing, women's clothing, jewelery,electronics..."
						/>
						<button
							type="submit"
							style={{
								cursor: "pointer",
								border: "none",
								outline: "none",
								background: "transparent",
							}}
						>
							<BiSearchAlt size={25} className={styles.icon} />
						</button>
					</form>
				</div>
				<div className={styles.mainLayout}>
					{searchResultsLoading && (
						<h2
							style={{
								color: "var(--black)",
								marginLeft: ".5rem",
								textAlign: "center",
							}}
						>
							Loading...
						</h2>
					)}
					{searchResultsError && (
						<div style={{ display: "flex", flexDirection: "column" }}>
							<h2 style={{ color: "var(--crimson)", textAlign: "center" }}>
								There was an error...
							</h2>
							<button
								type="button"
								style={{
									backgroundColor: "var(--black)",
									border: "none",
									outline: "none",
									color: "var(--white)",
									padding: ".8rem",
									maxWidth: "300px",
									marginInline: "auto",
									width: "100%",
									marginTop: "5rem",
									fontSize: "1.1rem",
									fontWeight: "500",
									cursor: "pointer",
								}}
								onClick={() => searchData(searchValue)}
							>
								Try Again
							</button>
						</div>
					)}
					{products.map((data: CartType) => (
						<SingleItem
							productCounts={productCounts}
							addItemToCart={addItemToCart}
							key={data.id}
							product={data}
						/>
					))}
				</div>
			</div>
			{!searchResultsLoading && !searchResultsError && <Footer />}
		</>
	);
};

export default Home;
